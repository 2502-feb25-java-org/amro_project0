-- create Customers table
CREATE TABLE Customers 
(
    ID  INT PRIMARY KEY IDENTITY (1, 1),
    Firstname   VARCHAR(50) NOT NULL,
    Lastname    VARCHAR(50) NOT NULL,
    CardNumber  VARCHAR(16) UNIQUE NOT NULL
);


-- create Products table
CREATE TABLE Products 
(
    ID  INT PRIMARY KEY IDENTITY (1, 1),
    name   VARCHAR(50) NOT NULL,
    price    DECIMAL(18,2) NOT NULL
);


-- create Odrers table
CREATE TABLE Orders 
(
    ID  INT PRIMARY KEY IDENTITY (1, 1),
    ProductID   INT NOT NULL,
    CustomerID  INT NOT NULL,
    FOREIGN KEY (ProductID) REFERENCES Products(ID),
    FOREIGN KEY (CustomerID) REFERENCES Customers(ID)
)


-- adding 3 records to each table
INSERT INTO Customers (Firstname, Lastname, CardNumber) VALUES 
('Tina', 'Smith', '1234567812345678'),
('Amro', 'Arafat', '1234567912345679'),
('Joe', 'Franco', '2234567922345679');

INSERT INTO Products (name, price) VALUES 
('iPhone', 200.95),
('iPad', 400.95),
('MacBook Pro', 2300.20);

INSERT INTO Orders (ProductID, CustomerID) VALUES
(1,1),
(2,2),
(3,2);


-- report all orders by Tina Smith
SELECT Customers.Firstname, Customers.Lastname, Products.name, Products.price
FROM Customers INNER JOIN Orders 
    ON Customers.ID = Orders.CustomerID
INNER JOIN Products 
    ON Orders.ProductID = Products.ID
WHERE Customers.Firstname = 'Tina' AND Customers.Lastname = 'Smith';


-- report all revenue generated by seles of IPhone
SELECT SUM(Products.price)
FROM Orders 
INNER JOIN Products 
    ON Orders.ProductID = Products.ID
WHERE Products.name = 'iPhone';


-- increase the price for iphone to $250
UPDATE Products 
SET price = 250.00 
where name = 'iPhone';